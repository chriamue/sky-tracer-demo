services:
  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8000"
    ports:
      - "8000:8000" # Web entrypoint
      - "8080:8080" # Dashboard
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
    networks:
      - sky-tracer

  airport-anywhere:
    build:
      context: .
      dockerfile: crates/airport-anywhere/Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.airports.entrypoints=web"
      - "traefik.http.routers.airports.rule=PathPrefix(`/airports`)"
      - "traefik.http.services.airports.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.airports-strip.stripprefix.prefixes=/airports"
      - "traefik.http.routers.airports.middlewares=airports-strip@docker"
      # Additional route for /api/airports
      - "traefik.http.routers.airports-api.entrypoints=web"
      - "traefik.http.routers.airports-api.rule=PathPrefix(`/api/airports`)"
      - "traefik.http.routers.airports-api.service=airports"
    environment:
      - RUST_LOG=info,tower_http=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - SERVICE_NAME=airport-anywhere
    volumes:
      - ./assets:/usr/local/bin/assets
    ports:
      - 3000:3000
    networks:
      - sky-tracer

  flight-controller:
    build:
      context: .
      dockerfile: crates/flight-controller/Dockerfile
    depends_on:
      - airport-anywhere
      - orbital-beacon
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flights.entrypoints=web"
      - "traefik.http.routers.flights.rule=PathPrefix(`/flights`)"
      - "traefik.http.services.flights.loadbalancer.server.port=3001"
      - "traefik.http.middlewares.flights-strip.stripprefix.prefixes=/flights"
      - "traefik.http.routers.flights.middlewares=flights-strip@docker"
      # Additional route for /api/flights
      - "traefik.http.routers.flights-api.entrypoints=web"
      - "traefik.http.routers.flights-api.rule=PathPrefix(`/api/flights`)"
      - "traefik.http.routers.flights-api.service=flights"
    environment:
      - RUST_LOG=info,tower_http=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - ORBITAL_BEACON_URL=http://orbital-beacon:3002
      - SERVICE_NAME=flight-controller
    ports:
      - 3001:3001
    networks:
      - sky-tracer

  flightmare-tracker:
    build:
      context: .
      dockerfile: crates/flightmare-tracker/Dockerfile
    depends_on:
      - airport-anywhere
      - flight-controller
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flightmare.rule=PathPrefix(`/flightmare`)"
      - "traefik.http.services.flightmare.loadbalancer.server.port=80"
      - "traefik.http.middlewares.flightmare-strip.stripprefix.prefixes=/flightmare"
      - "traefik.http.routers.flightmare.middlewares=flightmare-strip@docker"
    networks:
      - sky-tracer

  cockpit:
    build:
      context: .
      dockerfile: crates/cockpit/Dockerfile
    depends_on:
      - airport-anywhere
      - flight-controller
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.cockpit.entrypoints=web"
      - "traefik.http.routers.cockpit.rule=PathPrefix(`/cockpit`)"
      - "traefik.http.services.cockpit.loadbalancer.server.port=80"
      - "traefik.http.middlewares.cockpit-strip.stripprefix.prefixes=/cockpit"
      - "traefik.http.routers.cockpit.middlewares=cockpit-strip@docker"
    networks:
      - sky-tracer

  orbital-beacon:
    build:
      context: .
      dockerfile: crates/orbital-beacon/Dockerfile
    depends_on:
      - airport-anywhere
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.satellites.entrypoints=web"
      - "traefik.http.routers.satellites.rule=PathPrefix(`/satellites`)"
      - "traefik.http.services.satellites.loadbalancer.server.port=3002"
      - "traefik.http.middlewares.satellites-strip.stripprefix.prefixes=/satellites"
      - "traefik.http.routers.satellites.middlewares=satellites-strip@docker"
      # Additional route for /api/satellites
      - "traefik.http.routers.satellites-api.entrypoints=web"
      - "traefik.http.routers.satellites-api.rule=PathPrefix(`/api/satellites`)"
      - "traefik.http.routers.satellites-api.service=satellites"
      # Additional route for /api/position
      - "traefik.http.routers.position-api.entrypoints=web"
      - "traefik.http.routers.position-api.rule=PathPrefix(`/api/position`)"
      - "traefik.http.routers.position-api.service=satellites"
    environment:
      - RUST_LOG=info,tower_http=debug,orbital_beacon=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - SERVICE_NAME=orbital-beacon
      - AIRPORTS_SERVICE_URL=http://airport-anywhere:3000
      - PATH_PREFIX=/satellites
    ports:
      - 3002:3002
    networks:
      - sky-tracer

  tower-of-babel:
    build:
      context: .
      dockerfile: crates/tower-of-babel/Dockerfile
    depends_on:
      - flight-controller
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.babel.entrypoints=web"
      - "traefik.http.routers.babel.rule=PathPrefix(`/babel`)"
      - "traefik.http.services.babel.loadbalancer.server.port=3003"
      - "traefik.http.middlewares.babel-strip.stripprefix.prefixes=/babel"
      - "traefik.http.routers.babel.middlewares=babel-strip@docker"
      # Additional route for /api/flights
      - "traefik.http.routers.babel-api.entrypoints=web"
      - "traefik.http.routers.babel-api.rule=PathPrefix(`/api/babel`)"
      - "traefik.http.routers.babel-api.service=babel"
    environment:
      - RUST_LOG=info,tower_http=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - SERVICE_NAME=tower-of-babel
      - FLIGHT_CONTROLLER_URL=http://flight-controller:3001
    networks:
      - sky-tracer

  delay-orama:
    build:
      context: .
      dockerfile: crates/delay-orama/Dockerfile
    depends_on:
      - tower-of-babel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.delays.entrypoints=web"
      - "traefik.http.routers.delays.rule=PathPrefix(`/delays`)"
      - "traefik.http.services.delays.loadbalancer.server.port=3004"
      - "traefik.http.middlewares.delays-strip.stripprefix.prefixes=/delays"
      - "traefik.http.routers.delays.middlewares=delays-strip@docker"
    environment:
      - RUST_LOG=info,tower_http=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - SERVICE_NAME=delay-orama
      - TOWER_BABEL_URL=http://tower-of-babel:3003
    networks:
      - sky-tracer

  structurizr:
    image: structurizr/lite:latest
    platform: linux/amd64
    ports:
      - "8082:8080"
    volumes:
      - ./docs/:/usr/local/structurizr/
    environment:
      - STRUCTURIZR_WORKSPACE_PATH=.
      - STRUCTURIZR_URL=http://localhost:8082

  # Jaeger backend
  jaeger:
    image: jaegertracing/jaeger:2.4.0
    ports:
      - "16686:16686" # UI
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4317
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - sky-tracer

  index:
    image: nginx:alpine
    volumes:
      - ./assets/index/:/usr/share/nginx/html/:ro
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.index.entrypoints=web"
      # Specific paths only
      - "traefik.http.routers.index.rule=Path(`/index.html`) || Path(`/`) || Path(`/presentation/`)"
      # Lower priority (default is 0, lower numbers = lower priority)
      - "traefik.http.routers.index.priority=1"
      - "traefik.http.services.index.loadbalancer.server.port=80"
    networks:
      - sky-tracer

  sky-nexus:
    build:
      context: .
      dockerfile: crates/sky-nexus/Dockerfile
    depends_on:
      - airport-anywhere
      - tower-of-babel
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.nexus.entrypoints=web"
      - "traefik.http.routers.nexus.rule=PathPrefix(`/nexus`)"
      - "traefik.http.services.nexus.loadbalancer.server.port=8080"
      - "traefik.http.middlewares.nexus-strip.stripprefix.prefixes=/nexus"
      - "traefik.http.routers.nexus.middlewares=nexus-strip@docker"
      - "traefik.http.routers.nexus-api.entrypoints=web"
      - "traefik.http.routers.nexus-api.rule=PathPrefix(`/api/nexus`)"
      - "traefik.http.routers.nexus-api.service=nexus"
      - "traefik.http.routers.nexus-swagger.entrypoints=web"
      - "traefik.http.routers.nexus-swagger.rule=PathPrefix(`/swagger-ui`)"
      - "traefik.http.routers.nexus-swagger.service=nexus"
    environment:
      - RUST_LOG=info,tower_http=debug
      - OTEL_EXPORTER_OTLP_TRACES_ENDPOINT=http://jaeger:4317
      - OTEL_EXPORTER_OTLP_TRACES_PROTOCOL=grpc
      - OTEL_TRACES_SAMPLER=always_on
      - SERVICE_NAME=sky-nexus
    ports:
      - 8083:8080
    networks:
      - sky-tracer

networks:
  sky-tracer:
    name: sky-tracer
